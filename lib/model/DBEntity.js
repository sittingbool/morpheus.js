'use strict';
// dependencies
//----------------------------------------------------------------------------------------------------------
//var _ = require('lodash');
//----------------------------------------------------------------------------------------------------------


/**
 * This class has no description yet.
 *
 * @class DBEntity
 * @constructor
 */
//----------------------------------------------------------------------------------------------------------
module.exports = class DBEntity
//----------------------------------------------------------------------------------------------------------
{
    //------------------------------------------------------------------------------------------------------
    constructor( name, properties, relationships)
    //------------------------------------------------------------------------------------------------------
    {
        this._name = name;
        this.parseConstructorData(properties, relationships);
        this._setup();
    }


    //------------------------------------------------------------------------------------------------------
    parseConstructorData(properties, relationships)
    //------------------------------------------------------------------------------------------------------
    {
        var i, current, propertiesClone;

        if ( relationships === undefined ) {

            propertiesClone = properties;
            properties = {};
            relationships = {};

            for( i = 0; i < propertiesClone.length; i++ ) {
                current = propertiesClone[i];

                if ( typeof current.name !== 'string' || current.name.length < 1 ) { continue; }

                if ( current.accessType === 'relationship' ) {
                    relationships[current.name] = current;
                } else {
                    properties[current.name] = current;
                }
            }
        }

        if ( typeof properties !== 'object' || properties === null ) {
            properties = {};
        }

        if ( typeof relationships !== 'object' || relationships === null ) {
            relationships = {};
        }

        this.properties = properties;
        this.relationShips = relationships;
    }


    //------------------------------------------------------------------------------------------------------
    _setup()
    //------------------------------------------------------------------------------------------------------
    {

    }


    //------------------------------------------------------------------------------------------------------
    get name()
    //------------------------------------------------------------------------------------------------------
    {
        return this._name;
    }


    //------------------------------------------------------------------------------------------------------
    set name( value)
    //------------------------------------------------------------------------------------------------------
    {
        console.error('Can not change name of DBEntity from '+this._name+' to '+value+'. ' +
            'This value is unique.');
    }


    //------------------------------------------------------------------------------------------------------
    getProperty( name)
    //------------------------------------------------------------------------------------------------------
    {
        return this.properties[name] || null;
    }


    //------------------------------------------------------------------------------------------------------
    getRelationship( name)
    //------------------------------------------------------------------------------------------------------
    {
        return this.relationShips[name] || null;
    }


    //------------------------------------------------------------------------------------------------------
    typeOfProperty( name)
    //------------------------------------------------------------------------------------------------------
    {
        var property = this.getProperty(name);

        if ( property ) {
            return property.type || undefined;
        }

        return undefined;
    }


    //------------------------------------------------------------------------------------------------------
    propertyType( name)
    //------------------------------------------------------------------------------------------------------
    {
        return this.typeOfProperty(name);
    }


    //------------------------------------------------------------------------------------------------------
    typeOfRelationship( name)
    //------------------------------------------------------------------------------------------------------
    {
        var relationship = this.getRelationship(name);

        if ( relationship.type === 'many' ) {
            return 'many';
        }

        return 'one';
    }


    //------------------------------------------------------------------------------------------------------
    relationshipType( name)
    //------------------------------------------------------------------------------------------------------
    {
        return this.typeOfRelationship(name);
    }


    //------------------------------------------------------------------------------------------------------
    propertyIsOptional( name)
    //------------------------------------------------------------------------------------------------------
    {
        var property = this.getProperty(name);

        return property.optional === true;
    }


    //------------------------------------------------------------------------------------------------------
    propertyIsUnique( name)
    //------------------------------------------------------------------------------------------------------
    {
        var property = this.getProperty(name);

        return property.unique === true;
    }


    //------------------------------------------------------------------------------------------------------
    propertyIsEncrypted( name)
    //------------------------------------------------------------------------------------------------------
    {
        var property = this.getProperty(name);

        return property.encrypted === true;
    }


    //------------------------------------------------------------------------------------------------------
    relationshipIsOptional( name)
    //------------------------------------------------------------------------------------------------------
    {
        var relationship = this.getRelationship(name);

        return relationship.optional === true;
    }


    //------------------------------------------------------------------------------------------------------
    inverseOfRelationship( name)
    //------------------------------------------------------------------------------------------------------
    {
        var relationship = this.getRelationship(name);

        return relationship.inverse || null;
    }


    //------------------------------------------------------------------------------------------------------
    relationshipInverse( name)
    //------------------------------------------------------------------------------------------------------
    {
        return this.inverseOfRelationship(name);
    }


    //------------------------------------------------------------------------------------------------------
    destinationOfRelationship( name)
    //------------------------------------------------------------------------------------------------------
    {
        var relationship = this.getRelationship(name);

        return relationship.destination || null;
    }


    //------------------------------------------------------------------------------------------------------
    relationshipDestination( name)
    //------------------------------------------------------------------------------------------------------
    {
        return this.destinationOfRelationship(name);
    }


    //------------------------------------------------------------------------------------------------------
    deleteRuleOfRelationship( name)
    //------------------------------------------------------------------------------------------------------
    {
        var relationship = this.getRelationship(name);

        return relationship.deleteRule || 'nullify';
    }


    //------------------------------------------------------------------------------------------------------
    relationshipDeleteRule( name)
    //------------------------------------------------------------------------------------------------------
    {
        return this.deleteRuleOfRelationship(name);
    }
};
